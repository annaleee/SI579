{"ast":null,"code":"var _jsxFileName = \"/Users/annalee/Desktop/study/SI579/midtermTwo/src/problems/problem_3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const video = /*#__PURE__*/_jsxDEV(\"iframe\", {\n  width: \"560\",\n  height: \"180\",\n  src: \"https://www.youtube.com/embed/DXCE32wTcBk\",\n  title: \"YouTube video player\",\n  frameBorder: \"0\",\n  allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n  allowFullScreen: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 2,\n  columnNumber: 22\n}, this);\nexport const description = 'Modify the code in `src/problem_3.js` so that the greeting message updates as the user types into the `<input />`\\\n element, the greeting message updates. For example, if the user types `\"Jane\"` then the greeting\\\n message should say `\"Hello, Jane!\"`. The updates should happen **as** the user types into the `<input />` element.';\nexport function Problem() {\n  _s();\n\n  const [userWrote, setUserWrote] = useState('');\n  const [output, setOutput] = useState('Hello, ...!');\n  const inputRef = useRef();\n\n  function handleChange() {\n    let tempt = inputRef.current.value;\n    setOutput(`Hello, ${tempt}!`);\n    inputRef.current.focus();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Enter your name: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      onChange: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Problem, \"sPshxYrYk96WGcu2dYgRB9C/8f4=\");\n\n_c = Problem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Problem\");","map":{"version":3,"sources":["/Users/annalee/Desktop/study/SI579/midtermTwo/src/problems/problem_3.js"],"names":["React","useState","useRef","useEffect","video","description","Problem","userWrote","setUserWrote","output","setOutput","inputRef","handleChange","tempt","current","value","focus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAgD,OAAhD;;;AACA,OAAO,MAAMC,KAAK,gBAAG;AAAQ,EAAA,KAAK,EAAC,KAAd;AAAoB,EAAA,MAAM,EAAC,KAA3B;AAAiC,EAAA,GAAG,EAAC,2CAArC;AAAiF,EAAA,KAAK,EAAC,sBAAvF;AAA8G,EAAA,WAAW,EAAC,GAA1H;AAA8H,EAAA,KAAK,EAAC,0FAApI;AAA+N,EAAA,eAAe;AAA9O;AAAA;AAAA;AAAA;AAAA,QAAd;AACP,OAAO,MAAMC,WAAW,GACxB;AACA;AACA,oHAHO;AAKP,OAAO,SAASC,OAAT,GAAoB;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,aAAD,CAApC;AACA,QAAMU,QAAQ,GAAGT,MAAM,EAAvB;;AAEA,WAASU,YAAT,GAAuB;AACnB,QAAIC,KAAK,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,KAA7B;AACAL,IAAAA,SAAS,CAAE,UAASG,KAAM,GAAjB,CAAT;AACAF,IAAAA,QAAQ,CAACG,OAAT,CAAiBE,KAAjB;AACH;;AACD,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAC6B;AAAO,MAAA,GAAG,EAAIL,QAAd;AAAwB,MAAA,QAAQ,EAAE,MAAI,CAAE;AAAxC;AAAA;AAAA;AAAA;AAAA,YAD7B,eAEH;AAAA,gBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA,kBAAP;AAIH;;GAdeH,O;;KAAAA,O","sourcesContent":["import React, {useState, useRef, useEffect}from \"react\";\nexport const video = <iframe width=\"560\" height=\"180\" src=\"https://www.youtube.com/embed/DXCE32wTcBk\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>;\nexport const description =\n'Modify the code in `src/problem_3.js` so that the greeting message updates as the user types into the `<input />`\\\n element, the greeting message updates. For example, if the user types `\"Jane\"` then the greeting\\\n message should say `\"Hello, Jane!\"`. The updates should happen **as** the user types into the `<input />` element.';\n\nexport function Problem () {\n    const [userWrote, setUserWrote] = useState('');\n    const [output, setOutput] = useState('Hello, ...!');\n    const inputRef = useRef();\n\n    function handleChange(){\n        let tempt = inputRef.current.value;\n        setOutput(`Hello, ${tempt}!`);\n        inputRef.current.focus();\n    }\n    return <>\n        <label>Enter your name: </label><input ref = {inputRef} onChange={()=>{}}/>\n        <div>{output}</div>\n    </>;\n}\n"]},"metadata":{},"sourceType":"module"}