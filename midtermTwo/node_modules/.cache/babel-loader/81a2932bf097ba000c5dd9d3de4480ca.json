{"ast":null,"code":"var _jsxFileName = \"/Users/annalee/Desktop/study/SI579/midtermTwo/src/problems/problem_4.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const video = /*#__PURE__*/_jsxDEV(\"iframe\", {\n  width: \"560\",\n  height: \"315\",\n  src: \"https://www.youtube.com/embed/heSbM0VqH7E\",\n  title: \"YouTube video player\",\n  frameBorder: \"0\",\n  allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n  allowFullScreen: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 2,\n  columnNumber: 22\n}, this);\nexport const description = 'In `src/problem_4.js`, write code that allows the user to increment the click counter by clicking the \"Clicked\" `<button />`\\\n element (or reset it to `0` by clicking the \"Reset\" `<button />`). Then, **use\\\n [the `localStorage` API](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage) to make the click count\\\n persistent**. When the user reloads the page, it should remember the number of clicks.\\n\\n\\\n - *Note 1: your code should handle plural rules correctly; it should be \"Clicked 1 time\" and\\\n \"Clicked 2 time**s**\".*\\n\\\n - *Note 2: remember that `localStorage` can only store **strings**.*\\\n ';\nexport function Problem() {\n  _s();\n\n  let counter = localStorage.getItem('myCounter') == null ? 0 : localStorage.getItem('myCounter');\n  const [word, SetNum] = useState(counter == 1 ? counter + ' time' : counter + ' times');\n  console.log(counter);\n\n  function onCount() {\n    counter++;\n    localStorage.setItem('myCounter', num + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: onCount,\n      children: [\"Clicked \", num == 1 ? num + ' time' : num + ' times']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: () => {\n        localStorage.removeItem('myCounter');\n      },\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n  ;\n}\n\n_s(Problem, \"X4Y+XU5gJe5ubq5maA9kCN/1bLU=\");\n\n_c = Problem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Problem\");","map":{"version":3,"sources":["/Users/annalee/Desktop/study/SI579/midtermTwo/src/problems/problem_4.js"],"names":["React","useState","video","description","Problem","counter","localStorage","getItem","word","SetNum","console","log","onCount","setItem","num","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AACA,OAAO,MAAMC,KAAK,gBAAG;AAAQ,EAAA,KAAK,EAAC,KAAd;AAAoB,EAAA,MAAM,EAAC,KAA3B;AAAiC,EAAA,GAAG,EAAC,2CAArC;AAAiF,EAAA,KAAK,EAAC,sBAAvF;AAA8G,EAAA,WAAW,EAAC,GAA1H;AAA8H,EAAA,KAAK,EAAC,0FAApI;AAA+N,EAAA,eAAe;AAA9O;AAAA;AAAA;AAAA;AAAA,QAAd;AACP,OAAO,MAAMC,WAAW,GACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EARO;AAUP,OAAO,SAASC,OAAT,GAAoB;AAAA;;AACvB,MAAIC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAmC,IAAnC,GAAwC,CAAxC,GAA0CD,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAxD;AACA,QAAM,CAACC,IAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAACI,OAAO,IAAE,CAAT,GAAWA,OAAO,GAAC,OAAnB,GAA2BA,OAAO,GAAC,QAApC,CAA9B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;;AACA,WAASO,OAAT,GACA;AACIP,IAAAA,OAAO;AAEPC,IAAAA,YAAY,CAACO,OAAb,CAAqB,WAArB,EAAkCC,GAAG,GAAC,CAAtC;AACH;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACC;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAEF,OAA7C;AAAA,6BAAgEE,GAAG,IAAE,CAAL,GAAOA,GAAG,GAAC,OAAX,GAAmBA,GAAG,GAAC,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAE,MAAI;AAACR,QAAAA,YAAY,CAACS,UAAb,CAAwB,WAAxB;AAAsC,OAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIA;AACH;;GAfeX,O;;KAAAA,O","sourcesContent":["import React, {useState} from 'react';\nexport const video = <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/heSbM0VqH7E\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>;\nexport const description =\n'In `src/problem_4.js`, write code that allows the user to increment the click counter by clicking the \"Clicked\" `<button />`\\\n element (or reset it to `0` by clicking the \"Reset\" `<button />`). Then, **use\\\n [the `localStorage` API](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage) to make the click count\\\n persistent**. When the user reloads the page, it should remember the number of clicks.\\n\\n\\\n - *Note 1: your code should handle plural rules correctly; it should be \"Clicked 1 time\" and\\\n \"Clicked 2 time**s**\".*\\n\\\n - *Note 2: remember that `localStorage` can only store **strings**.*\\\n ';\n\nexport function Problem () {\n    let counter = localStorage.getItem('myCounter')==null?0:localStorage.getItem('myCounter');\n    const [word,SetNum] = useState(counter==1?counter+' time':counter+' times');\n    console.log(counter);\n    function onCount()\n    {\n        counter ++;\n        \n        localStorage.setItem('myCounter', num+1);\n    }\n    return <div className=\"btn-group\">\n            <button className=\"btn btn-primary\" onClick={onCount} >Clicked {num==1?num+' time':num+' times'}</button>\n            <button className=\"btn btn-secondary\" onClick={()=>{localStorage.removeItem('myCounter');}}>Reset</button>\n        </div>;\n    ;\n}"]},"metadata":{},"sourceType":"module"}